import{U as e}from"./engine.js";const t=e=>new Promise(((t,n)=>{const r=document.createElement("img");r.onload=()=>{t(r)},r.onerror=e=>{n(e)},r.src=URL.createObjectURL(e)})),n=new Float32Array([-1,1,0,1,1,0,-1,-1,0,1,-1,0]),r=new Float32Array([0,1,1,1,0,0,1,0]);async function a(a){const c=document.getElementsByTagName("canvas")[0].getContext("webgl2"),l=await fetch(a),u=await l.arrayBuffer(),E=function(e){const t=(new TextDecoder).decode(e),n="<x:xmpmeta";let r=t.indexOf(n);const a="</x:xmpmeta>";for(;-1!==r;){const e=t.indexOf(a,r);if(-1===r||-1===e)return null;const i=t.slice(r,e+12),o=(new DOMParser).parseFromString(i,"text/xml").getElementsByTagName("rdf:Description")[0],s=Object.fromEntries(Array.from(o.attributes).map((e=>[e.name.split(":")[1],e.value])).map((([e,t])=>[e.substr(0,3).toLowerCase()+e.substr(3),t])).map((([e,t])=>[e,isNaN(t)?"True"===t||"False"===t?"True"===t:t:parseFloat(t)])).slice(1));if(null!=s.hdrCapacityMax)return s;r=t.indexOf(n,e)}return null}(u),T=function(e,t=!0,n=!0){const r=new DataView(e);if(65496!==r.getUint16(0))return;const a=r.byteLength;let i,o=2,s=0;for(;o<a;){if(++s>250)return;if(255!==r.getUint8(o))return;if(i=r.getUint8(o+1),226===i){const e=o+4;if(1297106432===r.getUint32(e)){const a=e+4;let i;if(18761===r.getUint16(a))i=!1;else{if(19789!==r.getUint16(a))return;i=!0}if(42!==r.getUint16(a+2,!i))return;const o=r.getUint32(a+4,!i);if(o<8)return;const s=a+o,f=r.getUint16(s,!i),c=s+2;let l=0;for(let e=c;e<c+12*f;e+=12)45057===r.getUint16(e,!i)&&(l=r.getUint32(e+8,!i));const u=s+2+12*f+4,E=[];for(let e=u;e<u+16*l;e+=16){const t={MPType:r.getUint32(e,!i),size:r.getUint32(e+4,!i),dataOffset:r.getUint32(e+8,!i),dependantImages:r.getUint32(e+12,!i),start:-1,end:-1,isFII:!1};t.dataOffset?(t.start=a+t.dataOffset,t.isFII=!1):(t.start=0,t.isFII=!0),t.end=t.start+t.size,E.push(t)}if(n&&E.length){const e=new Blob([r]),n=[];for(const r of E){if(r.isFII&&!t)continue;const a=e.slice(r.start,r.end+1,"image/jpeg");n.push(a)}return n}}}o+=2+r.getUint16(o+2)}}(u);if(2!==T.length)return null;const{texture:g,width:R,height:m}=await async function(a,c,l){const u=c.getExtension("EXT_color_buffer_float");if(!u)throw new Error("EXT_color_buffer_float extension not supported");const E=await t(a[0]),T=await t(a[1]),{width:g,height:R}=E,{sdrTexture:m,gainMapTexture:d}=function(e,t,n){const r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.BROWSER_DEFAULT_WEBGL),e.texImage2D(e.TEXTURE_2D,0,e.SRGB8_ALPHA8,e.RGBA,e.UNSIGNED_BYTE,t),o(e);const a=e.createTexture();return e.bindTexture(e.TEXTURE_2D,a),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n),o(e),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.BROWSER_DEFAULT_WEBGL),{sdrTexture:r,gainMapTexture:a}}(c,E,T),{fbo:_,texture:p}=function(e,t,n){const r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),o(e),e.texImage2D(e.TEXTURE_2D,0,e.RGBA16F,t,n,0,e.RGBA,e.HALF_FLOAT,null);const a=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0),e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),{fbo:a,texture:r}}(c,g,R),{hdrCapacityMin:A,hdrCapacityMax:v}=l,x=Math.pow(2,l.hdrCapacityMax),U={sdr:m,gainMap:d,gamma:null!=l.gamma?new Array(3).fill(l.gamma):[1,1,1],offsetHDR:null!=l.offsetHDR?new Array(3).fill(l.offsetHDR):[1,1,1],offsetSDR:null!=l.offsetSDR?new Array(3).fill(l.offsetSDR):[1,1,1],gainMapMin:null!=l.gainMapMin?new Array(3).fill(l.gainMapMin):[0,0,0],gainMapMax:null!=l.gainMapMax?new Array(3).fill(l.gainMapMax):[1,1,1],weightFactor:(Math.log2(x)-A)/(v-A)};(function(t,n,r,a,i){const o=t.createProgram();e(t,o,n,r),t.linkProgram(o),t.useProgram(o),function(e,t,n){for(const[r,a]of Object.entries(n)){const n=e.getUniformLocation(t,r);if(a instanceof WebGLTexture){const t="sdr"===r?0:1;e.activeTexture(e["TEXTURE"+t]),e.bindTexture(e.TEXTURE_2D,a),e.uniform1i(n,t)}else if(Array.isArray(a))switch(a.length){case 2:e.uniform2fv(n,a);break;case 3:e.uniform3fv(n,a);break;case 4:e.uniform4fv(n,a)}else e.uniform1f(n,a)}}(t,o,a),function(e,t,n){for(const[r,{data:a,size:i}]of Object.entries(n)){const n=e.getAttribLocation(t,r),o=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,o),e.bufferData(e.ARRAY_BUFFER,a,e.STATIC_DRAW),e.enableVertexAttribArray(n),e.vertexAttribPointer(n,i,e.FLOAT,!1,0,0)}}(t,o,i)})(c,s,f,U,{position:{data:n,size:3},uv:{data:r,size:2}}),function(e,t,n){e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0)}(c,_,p);const b=function(e){const t=e.getParameter(e.VIEWPORT),n=e.getParameter(e.DEPTH_TEST),r=e.getParameter(e.DEPTH_WRITEMASK),a=e.getParameter(e.BLEND);return{viewport:t,depthTest:n,depthWrite:r,blendEnabled:a}}(c),F={viewport:[0,0,g,R],depthTest:!1,depthWrite:!1,blendEnabled:!1,clear:!0};return i(c,F),function(e){e.drawArrays(e.TRIANGLE_STRIP,0,4)}(c),i(c,b),{texture:p,width:g,height:R}}(T,c,E);return{texture:g,width:R,height:m}}function i(e,t){t.blendEnabled?e.enable(e.BLEND):e.disable(e.BLEND),t.depthTest?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),e.depthMask(t.depthWrite);const[n,r,a,i]=t.viewport;isNaN(a)||isNaN(i)||e.viewport(n,r,a,i),t.clear&&(e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT))}function o(e){e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR)}const s="#version 300 es\n\nprecision highp float;\n\nin vec3 position;\nin vec2 uv;\n\nout vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = vec4(position, 1.0);\n}\n",f="#version 300 es\n\nprecision highp float;\n// min half float value\n#define HALF_FLOAT_MIN vec3( -65504, -65504, -65504 )\n// max half float value\n#define HALF_FLOAT_MAX vec3( 65504, 65504, 65504 )\n\nuniform sampler2D sdr;\nuniform sampler2D gainMap;\nuniform vec3 gamma;\nuniform vec3 offsetHDR;\nuniform vec3 offsetSDR;\nuniform vec3 gainMapMin;\nuniform vec3 gainMapMax;\nuniform float weightFactor;\n\nin vec2 vUv;\n\nout vec4 fragColor;\n\nvec4 sRGBToLinear(vec4 srgbColor) {\n\tvec3 linearRGB = vec3(0.0);\n\tvec3 sRGB = srgbColor.rgb;\n\t\n\t// For each color channel, apply the proper conversion\n\tfor (int i = 0; i < 3; i++) {\n\t  if (sRGB[i] <= 0.04045) {\n\t\tlinearRGB[i] = sRGB[i] / 12.92;\n\t  } else {\n\t\tlinearRGB[i] = pow((sRGB[i] + 0.055) / 1.055, 2.4);\n\t  }\n\t}\n\treturn srgbColor;\n\treturn vec4(linearRGB, srgbColor.a);\n}\n\nvoid main() {\n  vec3 rgb = texture( sdr, vUv ).rgb;\n  vec3 recovery = texture( gainMap, vUv ).rgb;\n  vec3 logRecovery = pow( recovery, gamma );\n  vec3 logBoost = gainMapMin * ( 1.0 - logRecovery ) + gainMapMax * logRecovery;\n  vec3 hdrColor = (rgb + offsetSDR) * exp2( logBoost * weightFactor ) - offsetHDR;\n  vec3 clampedHdrColor = max( HALF_FLOAT_MIN, min( HALF_FLOAT_MAX, hdrColor ));\n  fragColor = vec4( clampedHdrColor , 1.0 );\n}\n";export{a as d};
