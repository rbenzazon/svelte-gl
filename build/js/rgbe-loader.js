const t=1016;async function r(r){const a=await fetch(r);return function(r){const a=t,n=1,o=2,s=3,i=4,l=1,c=2,f=4,h="\n",w=new Uint8Array(r);w.pos=0;const d=A(w),u=d.width,m=d.height,y=U(w.subarray(w.pos),u,m);let p,g;switch(a){case 1015:g=y.length/4;const r=new Float32Array(4*g);for(let t=0;t<g;t++)R(y,4*t,r,4*t);p=r;break;case t:g=y.length/4;const e=new Uint16Array(4*g);for(let t=0;t<g;t++)T(y,4*t,e,4*t);p=e;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+a)}return{width:u,height:m,data:p,header:d.string,gamma:d.gamma,exposure:d.exposure,type:a};function b(t,r){switch(t){case n:throw new Error("THREE.RGBELoader: Read Error: "+(r||""));case o:throw new Error("THREE.RGBELoader: Write Error: "+(r||""));case s:throw new Error("THREE.RGBELoader: Bad File Format: "+(r||""));default:throw new Error("THREE.RGBELoader: Memory Error: "+(r||""))}}function E(t,r,e){const a=128;r=r||1024;let n=t.pos,o=-1,s=0,i="",l=String.fromCharCode.apply(null,new Uint16Array(t.subarray(n,n+a)));for(;0>(o=l.indexOf(h))&&s<r&&n<t.byteLength;)i+=l,s+=l.length,n+=a,l+=String.fromCharCode.apply(null,new Uint16Array(t.subarray(n,n+a)));return-1<o&&(t.pos+=s+o+1,i+l.slice(0,o))}function A(t){const r=/^#\?(\S+)/,e=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,a=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,o=/^\s*FORMAT=(\S+)\s*$/,i=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,h={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let w,d;for((t.pos>=t.byteLength||!(w=E(t)))&&b(n,"no header found"),(d=w.match(r))||b(s,"bad initial token"),h.valid|=l,h.programtype=d[1],h.string+=w+"\n";w=E(t),!1!==w;)if(h.string+=w+"\n","#"!==w.charAt(0)){if((d=w.match(e))&&(h.gamma=parseFloat(d[1])),(d=w.match(a))&&(h.exposure=parseFloat(d[1])),(d=w.match(o))&&(h.valid|=c,h.format=d[1]),(d=w.match(i))&&(h.valid|=f,h.height=parseInt(d[1],10),h.width=parseInt(d[2],10)),h.valid&c&&h.valid&f)break}else h.comments+=w+"\n";return h.valid&c||b(s,"missing format specifier"),h.valid&f||b(s,"missing image size specifier"),h}function U(t,r,e){const a=r;if(a<8||a>32767||2!==t[0]||2!==t[1]||128&t[2])return new Uint8Array(t);a!==(t[2]<<8|t[3])&&b(s,"wrong scanline width");const o=new Uint8Array(4*r*e);o.length||b(i,"unable to allocate buffer space");let l=0,c=0;const f=4*a,h=new Uint8Array(4),w=new Uint8Array(f);let d=e;for(;d>0&&c<t.byteLength;){c+4>t.byteLength&&b(n),h[0]=t[c++],h[1]=t[c++],h[2]=t[c++],h[3]=t[c++],2==h[0]&&2==h[1]&&(h[2]<<8|h[3])==a||b(s,"bad rgbe scanline format");let r,e=0;for(;e<f&&c<t.byteLength;){r=t[c++];const a=r>128;if(a&&(r-=128),(0===r||e+r>f)&&b(s,"bad scanline data"),a){const a=t[c++];for(let t=0;t<r;t++)w[e++]=a}else w.set(t.subarray(c,c+r),e),e+=r,c+=r}const i=a;for(let t=0;t<i;t++){let r=0;o[l]=w[t+r],r+=a,o[l+1]=w[t+r],r+=a,o[l+2]=w[t+r],r+=a,o[l+3]=w[t+r],l+=4}d--}return o}function R(t,r,e,a){const n=t[r+3],o=Math.pow(2,n-128)/255;e[a+0]=t[r+0]*o,e[a+1]=t[r+1]*o,e[a+2]=t[r+2]*o,e[a+3]=1}function T(t,r,a,n){const o=t[r+3],s=Math.pow(2,o-128)/255;a[n+0]=e(Math.min(t[r+0]*s,65504)),a[n+1]=e(Math.min(t[r+1]*s,65504)),a[n+2]=e(Math.min(t[r+2]*s,65504)),a[n+3]=e(1)}}(await a.arrayBuffer())}function e(t){var r,e,n;Math.abs(t)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=t,e=-65504,n=65504,t=Math.max(e,Math.min(n,r)),a.floatView[0]=t;const o=a.uint32View[0],s=o>>23&511;return a.baseTable[s]+((8388607&o)>>a.shiftTable[s])}const a=n();function n(){const t=new ArrayBuffer(4),r=new Float32Array(t),e=new Uint32Array(t),a=new Uint32Array(512),n=new Uint32Array(512);for(let l=0;l<256;++l){const t=l-127;t<-27?(a[l]=0,a[256|l]=32768,n[l]=24,n[256|l]=24):t<-14?(a[l]=1024>>-t-14,a[256|l]=1024>>-t-14|32768,n[l]=-t-1,n[256|l]=-t-1):t<=15?(a[l]=t+15<<10,a[256|l]=t+15<<10|32768,n[l]=13,n[256|l]=13):t<128?(a[l]=31744,a[256|l]=64512,n[l]=24,n[256|l]=24):(a[l]=31744,a[256|l]=64512,n[l]=13,n[256|l]=13)}const o=new Uint32Array(2048),s=new Uint32Array(64),i=new Uint32Array(64);for(let l=1;l<1024;++l){let t=l<<13,r=0;for(;!(8388608&t);)t<<=1,r-=8388608;t&=-8388609,r+=947912704,o[l]=t|r}for(let l=1024;l<2048;++l)o[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)s[l]=l<<23;s[31]=1199570944,s[32]=2147483648;for(let l=33;l<63;++l)s[l]=2147483648+(l-32<<23);s[63]=3347054592;for(let l=1;l<64;++l)32!==l&&(i[l]=1024);return{floatView:r,uint32View:e,baseTable:a,shiftTable:n,mantissaTable:o,exponentTable:s,offsetTable:i}}export{r as l};
