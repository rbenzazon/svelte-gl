const t=1016,r=1015;async function e(e){const n=await fetch(e);return function(e){const n=t,o=1,s=2,i=3,l=4,c=1,f=2,h=4,w="\n",d=new Uint8Array(e);d.pos=0;const u=U(d),m=u.width,y=u.height,p=R(d.subarray(d.pos),m,y);let g,b;switch(n){case r:b=p.length/4;const e=new Float32Array(4*b);for(let t=0;t<b;t++)T(p,4*t,e,4*t);g=e;break;case t:b=p.length/4;const a=new Uint16Array(4*b);for(let t=0;t<b;t++)M(p,4*t,a,4*t);g=a;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+n)}return{width:m,height:y,data:g,header:u.string,gamma:u.gamma,exposure:u.exposure,type:n};function E(t,r){switch(t){case o:throw new Error("THREE.RGBELoader: Read Error: "+(r||""));case s:throw new Error("THREE.RGBELoader: Write Error: "+(r||""));case i:throw new Error("THREE.RGBELoader: Bad File Format: "+(r||""));default:throw new Error("THREE.RGBELoader: Memory Error: "+(r||""))}}function A(t,r,e){const a=128;r=r||1024;let n=t.pos,o=-1,s=0,i="",l=String.fromCharCode.apply(null,new Uint16Array(t.subarray(n,n+a)));for(;0>(o=l.indexOf(w))&&s<r&&n<t.byteLength;)i+=l,s+=l.length,n+=a,l+=String.fromCharCode.apply(null,new Uint16Array(t.subarray(n,n+a)));return-1<o&&(t.pos+=s+o+1,i+l.slice(0,o))}function U(t){const r=/^#\?(\S+)/,e=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,a=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,n=/^\s*FORMAT=(\S+)\s*$/,s=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,l={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let w,d;for((t.pos>=t.byteLength||!(w=A(t)))&&E(o,"no header found"),(d=w.match(r))||E(i,"bad initial token"),l.valid|=c,l.programtype=d[1],l.string+=w+"\n";w=A(t),!1!==w;)if(l.string+=w+"\n","#"!==w.charAt(0)){if((d=w.match(e))&&(l.gamma=parseFloat(d[1])),(d=w.match(a))&&(l.exposure=parseFloat(d[1])),(d=w.match(n))&&(l.valid|=f,l.format=d[1]),(d=w.match(s))&&(l.valid|=h,l.height=parseInt(d[1],10),l.width=parseInt(d[2],10)),l.valid&f&&l.valid&h)break}else l.comments+=w+"\n";return l.valid&f||E(i,"missing format specifier"),l.valid&h||E(i,"missing image size specifier"),l}function R(t,r,e){const a=r;if(a<8||a>32767||2!==t[0]||2!==t[1]||128&t[2])return new Uint8Array(t);a!==(t[2]<<8|t[3])&&E(i,"wrong scanline width");const n=new Uint8Array(4*r*e);n.length||E(l,"unable to allocate buffer space");let s=0,c=0;const f=4*a,h=new Uint8Array(4),w=new Uint8Array(f);let d=e;for(;d>0&&c<t.byteLength;){c+4>t.byteLength&&E(o),h[0]=t[c++],h[1]=t[c++],h[2]=t[c++],h[3]=t[c++],2==h[0]&&2==h[1]&&(h[2]<<8|h[3])==a||E(i,"bad rgbe scanline format");let r,e=0;for(;e<f&&c<t.byteLength;){r=t[c++];const a=r>128;if(a&&(r-=128),(0===r||e+r>f)&&E(i,"bad scanline data"),a){const a=t[c++];for(let t=0;t<r;t++)w[e++]=a}else w.set(t.subarray(c,c+r),e),e+=r,c+=r}const l=a;for(let t=0;t<l;t++){let r=0;n[s]=w[t+r],r+=a,n[s+1]=w[t+r],r+=a,n[s+2]=w[t+r],r+=a,n[s+3]=w[t+r],s+=4}d--}return n}function T(t,r,e,a){const n=t[r+3],o=Math.pow(2,n-128)/255;e[a+0]=t[r+0]*o,e[a+1]=t[r+1]*o,e[a+2]=t[r+2]*o,e[a+3]=1}function M(t,r,e,n){const o=t[r+3],s=Math.pow(2,o-128)/255;e[n+0]=a(Math.min(t[r+0]*s,65504)),e[n+1]=a(Math.min(t[r+1]*s,65504)),e[n+2]=a(Math.min(t[r+2]*s,65504)),e[n+3]=a(1)}}(await n.arrayBuffer())}function a(t){var r,e,a;Math.abs(t)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=t,e=-65504,a=65504,t=Math.max(e,Math.min(a,r)),n.floatView[0]=t;const o=n.uint32View[0],s=o>>23&511;return n.baseTable[s]+((8388607&o)>>n.shiftTable[s])}const n=o();function o(){const t=new ArrayBuffer(4),r=new Float32Array(t),e=new Uint32Array(t),a=new Uint32Array(512),n=new Uint32Array(512);for(let t=0;t<256;++t){const r=t-127;r<-27?(a[t]=0,a[256|t]=32768,n[t]=24,n[256|t]=24):r<-14?(a[t]=1024>>-r-14,a[256|t]=1024>>-r-14|32768,n[t]=-r-1,n[256|t]=-r-1):r<=15?(a[t]=r+15<<10,a[256|t]=r+15<<10|32768,n[t]=13,n[256|t]=13):r<128?(a[t]=31744,a[256|t]=64512,n[t]=24,n[256|t]=24):(a[t]=31744,a[256|t]=64512,n[t]=13,n[256|t]=13)}const o=new Uint32Array(2048),s=new Uint32Array(64),i=new Uint32Array(64);for(let t=1;t<1024;++t){let r=t<<13,e=0;for(;!(8388608&r);)r<<=1,e-=8388608;r&=-8388609,e+=947912704,o[t]=r|e}for(let t=1024;t<2048;++t)o[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)s[t]=t<<23;s[31]=1199570944,s[32]=2147483648;for(let t=33;t<63;++t)s[t]=2147483648+(t-32<<23);s[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(i[t]=1024);return{floatView:r,uint32View:e,baseTable:a,shiftTable:n,mantissaTable:o,exponentTable:s,offsetTable:i}}export{e as l};
