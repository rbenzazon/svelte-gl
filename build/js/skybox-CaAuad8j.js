import{av as n,aB as r,r as e,a6 as t,U as o,Z as a,_ as i,a0 as s,a1 as c,aC as u,T as E,Q as T,R as _,aD as g,a3 as l,y as p,P as f,O as P,W as m,N as d}from"./engine-B_VjxpyI.js";var U="#version 300 es\r\n\r\n#define SHADER_NAME skyboxVertex\r\n\r\nin vec4 position;\r\nout vec4 v_position;\r\nvoid main() {\r\n    v_position = position;\r\n    gl_Position = position;\r\n    gl_Position.z = 1.0;\r\n}",A="#version 300 es\r\nprecision highp float;\r\n\r\n#define SHADER_NAME skyboxFragment\r\n\r\nuniform samplerCube skybox;\r\nuniform mat4 viewDirectionProjectionInverse;\r\n\r\n${declarations}\r\n  \r\nin vec4 v_position;\r\n  \r\n// we need to declare an output for the fragment shader\r\nout vec4 fragColor;\r\nvec4 sRGBTransferOETF( in vec4 value ) {\r\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\r\n}\r\nvoid main() {\r\n  vec4 t = viewDirectionProjectionInverse * v_position;\r\n  fragColor = texture(skybox, normalize(t.xyz / t.w));\r\n  ${toneMappings}\r\n  ${hdrEncoding ? `\r\n  fragColor = sRGBTransferOETF(fragColor);\r\n  ` : ''}\r\n}";async function v(t){let o,_;function g(n){o=n}function l(){return o}const p={createProgram:n,setupProgram:[a,i],setupMaterial:[],bindTextures:[x(l)],setupCamera:M,useProgram:s,selectProgram:c,updateProgram:[h((function(n){_=n}))],meshes:[{attributes:{positionsSize:2,positions:new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1])},drawMode:T[4]}],setFrameBuffer:u,postDraw:I((function(){return _}))};let f,P,m;if(function(n){return"url"in n&&"string"==typeof n.url}(t)){p.setupMaterial=[await t.convertToCube(t.url,g)];const n=t.hdrEncoding??!1;p.setupProgram=[R(null,n),...p.setupProgram],f={url:t.url}}else(function(n){return"typedArray"in n&&n.typedArray instanceof Uint16Array})(t)&&(P=t.typedArray,p.createProgram=function(r){return function(e){return function(){null!=r&&r(),n(e)()}}}(function(n,t,o,a,i,s,c){return function(){const{gl:u}=E;if(null==o()){const o=a(n,u,i,s,c);t(o),r(),e.update((n=>n))}}}(P,g,l,t.convertToCube,t.width,t.height,t.cubeSize)),m=t.toneMapping,p.setupProgram=[R(m,!0),...p.setupProgram],p.setupMaterial=[x(l)],f={});return{...f,order:0,programs:[p],getTexture:l}}function R(n,r){return function(){const{gl:e,program:a}=E;let i="",s="";null!=n&&(i=n.shader({declaration:!0,exposure:n.exposure}),s=n.shader({color:!0}));const c=t(A,{declarations:"",toneMappings:"",hdrEncoding:!1})({declarations:i,toneMappings:s,hdrEncoding:r});console.log("hdrEncoding",r),o(e,a,U,c)}}function M(n){return function(){const{gl:r,program:e}=E,t=_(n),{projection:o}=n,a=(i=t.position,s=t.target,c=t.up,u=p(),T=f(m(),P(m(),i,s)),U=f(m(),d(m(),c,T)),A=f(m(),d(m(),T,U)),u[0]=U[0],u[1]=U[1],u[2]=U[2],u[3]=0,u[4]=A[0],u[5]=A[1],u[6]=A[2],u[7]=0,u[8]=T[0],u[9]=T[1],u[10]=T[2],u[11]=0,u[12]=i[0],u[13]=i[1],u[14]=i[2],u[15]=1,u);var i,s,c,u,T,U,A;const v=g(p(),a);v[12]=0,v[13]=0,v[14]=0;const R=l(p(),o,v),M=g(p(),R),C=r.getUniformLocation(e,"viewDirectionProjectionInverse");r.uniformMatrix4fv(C,!1,M)}}async function C(n,r){const t=new Image;return await new Promise(((r,e)=>{t.src=n,t.onload=function(){r(t)},t.onerror=e})),function(){const{gl:t}=E,o=t.createTexture();r(o),t.bindTexture(t.TEXTURE_CUBE_MAP,o);const a=new Image;a.src=n,t.bindTexture(t.TEXTURE_CUBE_MAP,o),function(n,r){const e=document.createElement("canvas"),t=e.getContext("2d"),o=n.width/4,a=n.height/3;e.width=o,e.height=a;const i=[[2,1,r.TEXTURE_CUBE_MAP_POSITIVE_X],[0,1,r.TEXTURE_CUBE_MAP_NEGATIVE_X],[1,0,r.TEXTURE_CUBE_MAP_POSITIVE_Y],[1,2,r.TEXTURE_CUBE_MAP_NEGATIVE_Y],[1,1,r.TEXTURE_CUBE_MAP_POSITIVE_Z],[3,1,r.TEXTURE_CUBE_MAP_NEGATIVE_Z]];i.forEach((([i,s,c])=>{t.clearRect(0,0,o,a),t.drawImage(n,i*o,s*a,o,a,0,0,o,a),r.texImage2D(c,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)}))}(a,t),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,t.LINEAR_MIPMAP_LINEAR),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_R,t.CLAMP_TO_EDGE),t.generateMipmap(t.TEXTURE_CUBE_MAP),e.update((n=>n))}}function x(n){return function(){const{gl:r,program:e}=E,t=r.getUniformLocation(e,"envMap");r.uniform1i(t,0),r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_CUBE_MAP,n())}}function h(n){return function(){const{gl:r}=E;n(r.getParameter(r.DEPTH_FUNC)),r.depthFunc(r.LEQUAL)}}function I(n){return function(){const{gl:r}=E;r.depthFunc(n())}}export{v as c,C as s};
