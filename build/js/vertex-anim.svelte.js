import{a4 as n,T as e,S as t,i as r,s as o,M as i,e as a,a as s,c as g,b as c,m as f,n as m,t as v,d as l,f as y,g as d,h as x,o as p,r as z,l as u,j as P,k as D,p as b,A as h,B as T,C as L,D as q,y as _,z as w,H as $,E as S,F as A,G as B}from"./engine.js";import{c as j}from"./plane.js";import{c as F}from"./specular.js";const U=({frequency:e=1,speed:t=1,amplitude:r=1,normalTangentLength:o=.01})=>({frequency:e,speed:t,amplitude:r,normalTangentLength:o,type:"vertex",requireTime:!0,shader:n("${declaration ? `\n\nuniform float noiseDistortionFrequency;\r\nuniform float noiseDistortionSpeed;\r\nuniform float noiseDistortionAmplitude;\r\nuniform float noiseDistortionTangentLength;\n\nvec3 mod289(vec3 x)\r\n{\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\n\nvec4 mod289(vec4 x)\r\n{\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\n\nvec4 permute(vec4 x)\r\n{\r\n  return mod289(((x*34.0)+10.0)*x);\r\n}\n\nvec4 taylorInvSqrt(vec4 r)\r\n{\r\n  return 1.79284291400159 - 0.85373472095314 * r;\r\n}\n\nvec3 fade(vec3 t) {\r\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\r\n}\n\nfloat pnoise(vec3 P, vec3 rep)\r\n{\r\n  vec3 Pi0 = mod(floor(P), rep); \n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); \n  Pi0 = mod289(Pi0);\r\n  Pi1 = mod289(Pi1);\r\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\r\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\r\n  vec4 iz0 = Pi0.zzzz;\r\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\r\n  vec4 ixy0 = permute(ixy + iz0);\r\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\r\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\r\n  gx0 = fract(gx0);\r\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\r\n  vec4 sz0 = step(gz0, vec4(0.0));\r\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\r\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\r\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\r\n  gx1 = fract(gx1);\r\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\r\n  vec4 sz1 = step(gz1, vec4(0.0));\r\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\r\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\r\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\r\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\r\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\r\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\r\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\r\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\r\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\r\n  g000 *= norm0.x;\r\n  g010 *= norm0.y;\r\n  g100 *= norm0.z;\r\n  g110 *= norm0.w;\r\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\r\n  g001 *= norm1.x;\r\n  g011 *= norm1.y;\r\n  g101 *= norm1.z;\r\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\r\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\r\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\r\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\r\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\r\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\r\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\r\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\r\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\r\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\r\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \r\n  return 2.2 * n_xyz;\r\n}\n\nvec3 orthogonal(vec3 v) {\r\n    return normalize(abs(v.x) > abs(v.z) ? vec3(-v.y, v.x, 0.0)\r\n    : vec3(0.0, -v.z, v.y));\r\n}\n\nfloat getDisplacement(vec3 position) {\r\n    float b = -noiseDistortionAmplitude * pnoise( position*noiseDistortionFrequency + vec3( noiseDistortionSpeed * time), vec3( 10.0 ) );\r\n    return  b - noiseDistortionAmplitude;\r\n}\r\n` : ''}\r\n${position ? `\r\n    float displacement = getDisplacement(position);\r\n    animatedPosition = animatedPosition + displacement * normal;\r\n    vec3 tangent1 = orthogonal(normal);\r\n    vec3 tangent2 = normalize(cross(normal, tangent1));\r\n    vec3 nearby1 = position + tangent1 * noiseDistortionTangentLength;\r\n    vec3 nearby2 = position + tangent2 * noiseDistortionTangentLength;\n\n    float displacementTangent = getDisplacement(nearby1);\r\n    vec3 modifiedPositionTangent = nearby1 + displacementTangent * normal;\r\n    float displacementBitangent = getDisplacement(nearby2);\r\n    vec3 modifiedPositionBitangent = nearby2 + displacementBitangent * normal;\r\n    transformedNormal = normalize(cross(modifiedPositionTangent - animatedPosition, modifiedPositionBitangent - animatedPosition));\r\n` : ''}",{declaration:!1,position:!1}),setupAnimation:C({frequency:e,speed:t,amplitude:r,normalTangentLength:o})});function C({frequency:n,speed:t,amplitude:r,normalTangentLength:o}){return function(){const{gl:i,program:a}=e,s=i.getUniformLocation(a,"noiseDistortionFrequency"),g=i.getUniformLocation(a,"noiseDistortionSpeed"),c=i.getUniformLocation(a,"noiseDistortionAmplitude"),f=i.getUniformLocation(a,"noiseDistortionTangentLength");i.uniform1f(s,2*n),i.uniform1f(g,.001*t),i.uniform1f(c,.07*r),i.uniform1f(f,o)}}function I(n){let e,t,r,o;return r=new i({}),{c(){e=a("canvas"),t=s(),g(r.$$.fragment)},m(i,a){c(i,e,a),n[1](e),c(i,t,a),f(r,i,a),o=!0},p:m,i(n){o||(v(r.$$.fragment,n),o=!0)},o(n){l(r.$$.fragment,n),o=!1},d(o){o&&(y(e),y(t)),n[1](null),d(r,o)}}}function k(){}function E(n,e,t){let r,o,i,a,s,g;return x(n,z,(n=>t(2,r=n))),x(n,u,(n=>t(3,o=n))),x(n,P,(n=>t(4,i=n))),x(n,D,(n=>t(5,a=n))),x(n,b,(n=>t(6,s=n))),p((async()=>{h(z,r={...r,canvas:g,backgroundColor:T,ambientLightColor:[16777215,.1]},r),h(b,s={...s,position:[0,3,-5],target:[0,0,-1],fov:75},s);const n=L(q({position:[0,1,0],color:[1,1,1],intensity:2,cutoffDistance:15,decayExponent:0})),e=j(10,10,200,200),t=_(w()),c=$({diffuse:[0,.4,.8],metalness:0,specular:F({roughness:.1,ior:1.4,intensity:.5,color:[1,1,1]})});h(D,a=[...a,c],a),h(P,i=[...i,S({...e,matrix:t,material:c,animations:[U({frequency:1,speed:1,amplitude:1,normalTangentLength:.01})]})],i),h(u,o=[...o,n],o),h(z,r={...r,loop:k,enabled:!0},r),A(g,b)})),[g,function(n){B[n?"unshift":"push"]((()=>{g=n,t(0,g)}))}]}new class extends t{constructor(n){super(),r(this,n,E,I,o,{})}}({target:document.body});
